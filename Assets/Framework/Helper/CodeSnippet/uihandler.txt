using System.Collections.Generic;
using LowoUN.Module.UI;

namespace LowoUN.Business.UI 
{
	public partial class UIHandler
	{
		public enum Objs_$expression$
		{
			None,
			Txt_Name,
			Txt_Desc,
			Img_Achieve,
			List_Reward,
			Progress_Prog,
		}
		
		public enum Evts_$expression$
		{
			None,
			Btn_Close,
		}

		#region ---------------- for holder ui inspector ----------------
		#if UNITY_EDITOR
		[ObjsAtt4UIInspector(UIPanelType.$expression$)]
		public List<string> SetInspectorObjectEnum4$expression$()
		{
			return UILinker.instance.GetEnumNameList<Objs_$expression$>();
		}

		[EvtsAtt4UIInspector(UIPanelType.$expression$)]
		public List<string> SetInspectorEventEnum4$expression$()
		{
			return UILinker.instance.GetEnumNameList<Evts_$expression$>();
		}
		#endif
		#endregion

		#region ----------------- ui binder constructor -----------------
		[UIBinderAtt(UIPanelType.$expression$)]
		public UIBinder GetUIBinder4$expression$(int instanceID)
		{
			return new UIBinder$expression$((int)UIPanelType.$expression$, instanceID);
		}
		#endregion

		#region ----------------- handle notify events ------------------
		[Events4NotifyAtt(true)]
		public void AddNotifyEvts_$expression$ () {
			//NotifyMgr.Register<string>(CompleteNewName, "u2u_naming_set-role-name");
		}
		[Events4NotifyAtt(false)]
		public void RemoveNotifyEvts_$expression$ () {
			//NotifyMgr.Remove<string>(CompleteNewName);
		}

		private void CompleteNewName (string newName) {
			foreach (var item in UIHub.instance.GetHolders(UIPanelType.$expression$)) {
				//UIHub.instance.GetData<UIBinderLogin> (item.insID).Create (newName);
			}
		}
		#endregion

		#region ------ responce for the interactive ui components ------
		[UIActionAtt((int)Evts_$expression$.Btn_Close, UIPanelType.$expression$)]
		public void Close_$expression$(params object[] arr)
		{
			//NotifyMgr.Broadcast<int> ("u2u_pve_selectStageExplore", (int)arr[0], (int)arr[1]);
			//LowoUN.Util.Notify.NotifyMgr.Broadcast ("u2u_hero_check-card");
		}
		#endregion
	}
}$end$